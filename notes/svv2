# Ubuntu GNU/Linux 14.04 - amd64
# svv2

#=========================================================================

tasksel --list-task | grep "^i " | sed "s/^/# /"
# i server	Basic Ubuntu server
# i openssh-server	OpenSSH server

#=========================================================================

aptitude install vsftpd ftp

## stop and start upstart ##

initctl list | grep ftp
# vsftpd start/running, process 4507

initctl stop vsftpd
# vsftpd stop/waiting

## stop and start manually ##

ls /usr/sbin/ | grep ftp
# vsftpd
ls /etc/ | grep ftpd
# vsftpd.conf

## Verify it is running
/usr/sbin/vsftpd /etc/vsftpd.conf &

ps -ef | grep vsftpd

ftp localhost

killall vsftpd

#=========================================================================
## Layer 2: configuration examples

## blacklist hardware
cat /etc/modprobe.d/blacklist.conf

## check link status
ip link show
ethtool eth0
mii-tool eth0

## change MTU ( https://en.wikipedia.org/wiki/Maximum_transmission_unit )
ip link set mtu 1492 dev eth0

## change link speed
ethtool -s eth0 speed 1000 duplex full

## Additional Layer2 MAC VLAN address to eth0
ip link add link eth0 dev peth0 type macvlan
ip link set up dev peth0

ip link show
ethtool eth0
ethtool peth0
mii-tool eth0

#=========================================================================
## Layer 3: configuration examples

ip address show
ip route show
# default via 192.168.1.1 dev eth0 
# 192.168.1.0/24 dev eth0  proto kernel  scope link  src 192.168.1.104 

## manually set a network (Layer 3) address:
ip addr add 10.0.2.25/255.255.255.0 dev eth0

## manually change default route:
ip route del default via 192.168.1.1
ip route add default via 192.168.1.2
## or
## ip route replace default via 192.168.1.2 dev eth0 

ip route show
# default via 192.168.1.2 dev eth0 
# 192.168.1.0/24 dev eth0  proto kernel  scope link  src 192.168.1.105 
# 192.168.1.0/24 dev eth0  proto kernel  scope link  src 192.168.1.104 

## DNS servers
cat /etc/resolv.conf
echo "nameserver 192.168.0.254" >> /etc/resolv.conf

## release and request a DHCP configuration
dhclient -r eth0 && dhclient eth0
## NB concatenate !!

ip route show
cat /etc/resolv.conf

## Network configuration files
cat /etc/network/interfaces
cat /etc/hostname
cat /etc/hosts

## Create a boot-time configuration of network interface

## info

ip address show
# 192.168.1.104/24
ip route show
# default via 192.168.1.1 dev eth0
cat /etc/resolv.conf
# nameserver 8.8.8.8
# nameserver 8.8.4.4

cat /etc/network/interfaces
 auto eth0
 iface eth0 inet static
	address 192.168.1.105
	netmask 255.255.255.0
	gateway 192.168.1.1
 ## place dns information after interface stanzas
 dns-nameservers 8.8.8.8

## release and request new configuration
ifdown --exclude=lo -a && ifup --exclude=lo -a
## NB concatenate !!

ip address show
# 192.168.1.105/24
ip route show
# default via 192.168.1.1 dev eth0
cat /etc/resolv.conf
# nameserver 8.8.8.8

#=========================================================================
## Network Troubleshooting and monitoring

ping
traceroute
nmap

DNS	hostnames
IP	addrersses

## sniffing
## http://www.tecmint.com/12-tcpdump-commands-a-network-sniffer-tool/

tcpdump -i eth0 port 80
## output pcap file for wireshark analysis
tcpdump -i eth0 -w capture.pcap port 80
tcpdump -r capture.pcap

## ping analysis

# introduce network problem (random packet loss)
tc qdisc add dev lo root netem loss random 40

ping localhost
tcpdump -i lo proto ICMP

# cleanup tc command
tc qdisc del dev lo root

## sever side troubleshooting
netstat -taupe
ss -ltp

cat /etc/hosts.allow
cat /etc/hosts.deny

## Advanced troubleshooting
cat /etc/sysctl.conf

ls /sys/class/net/
cat /sys/class/net/eth*/operstate

cat /proc/sys/kernel/hostname

cat /proc/sys/net/ipv4/ip_forward
cat /proc/sys/net/ipv4/conf/*/accept_redirects
cat /proc/sys/net/ipv4/icmp_echo_ignore_all
cat /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts
cat /proc/net/arp

## Tools

vnstat
## network stats
iptraf
## real-time network traffic analyzer
snort
## network intrusion detection system

aptitude install vnstat iptraf snort
dpkg-reconfigure snort

## examples allow/deny ports

initctl start vsftpd

telnet localhost ftp
# C-]
# q

## Block the ftp port
cat /etc/hosts.deny
  vsftpd: ALL

ifdown -a && ifup -a

telnet localhost ftp
# C-c

## Allow the ftp port only for localhost
cat /etc/hosts.allow
  vsftpd: localhost

ifdown -a && ifup -a

telnet localhost ftp
# C-]
# q

